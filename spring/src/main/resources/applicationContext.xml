<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<!-- 开启注解扫描 -->
	<context:component-scan
		base-package="net.seehope"></context:component-scan>

	<!-- 开启AOP相关注解的支持 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 开启事务相关注解支持 -->
	<tx:annotation-driven />

	<!-- 数据库连接池 管理数据库连接的创建和销毁等等 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/0713db"></property>
		<property name="username" value="root"></property>
		<property name="password" value="1234"></property>
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- AOP 日志记录log4j logback 异常回滚 -->

	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution(* net.seehope..*.service.impl.*.*(..))" id="pc" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
	</aop:config>
	<!-- <bean id="myAspect" class="net.seehope.spring.aspect.MyAspect"></bean> -->
	<!-- 增强工程中所有service层方法 expression public void package.class.name (){} execution() 
		net.seehope..*.service.impl.*.*(..)) -->
	<!-- 使用前面中的before方法作为前置通知 增强 切点PC 中选中的方法 -->
	<!-- <aop:config> <aop:aspect id="aspect" ref="myAspect"> <aop:pointcut 
		expression="execution(* net.seehope..*.service.impl.*.*(..))" id="pc" /> 
		<aop:before method="before" pointcut-ref="pc" /> <aop:around method="around" 
		pointcut-ref="pc" /> <aop:after-returning method="afterReturning" returning="result" 
		pointcut-ref="pc" /> <aop:after-throwing method="afterThrowing" throwing="e" 
		pointcut-ref="pc" /> <aop:after method="after" pointcut-ref="pc" /> </aop:aspect> 
		</aop:config> -->

	<!-- <import resource="classpath:applicationContext-demo.xml" /> -->
</beans>